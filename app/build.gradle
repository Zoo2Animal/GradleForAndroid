apply plugin: 'com.android.application'

android {
//    compileSdkVersion 29
//    buildToolsVersion "29.0.2"

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.lloydfinch.gradleforandroid"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {

        debug {
            buildConfigField "boolean", "LOGABLE", "true"
            buildConfigField "String", "URL", '"test"'
            resValue "string", "app_name2", "app_debug"
        }

        release {
            buildConfigField "boolean", "LOGABLE", "false"
            buildConfigField "String", "URL", '"online"'
            resValue "string", "app_name2", "app_release"

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        /**
         * 使用debug构建来初始化staging构建
         */
        staging.initWith(buildTypes.debug)

        /**
         * 添加一个构建
         */
        staging {
            applicationIdSuffix ".staging"
            versionNameSuffix "-staging"
            buildConfigField "String", "URL", '"staging"'
            //覆盖debug构建中的属性值
            debuggable = false
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    viewBinding {
        enabled true
    }


    /**
     * 多渠道
     */
    productFlavors {
        //flavor纬度，flavor里面必须有这个数组中的一个
        flavorDimensions("versionCode")
        red {
            applicationId 'com.gradleforandroid.red'
            versionCode 3
        }

        blue {
            applicationId 'com.gradleforandroid.blue'
            minSdkVersion 18
            versionCode 4
        }

        free {
            versionCode 5
        }

        paid {
            versionCode 6
        }
    }

}

/**
 * 定义variant过滤器
 */
android.variantFilter { variant ->
    if (variant.buildType.name == 'release') {
        variant.getFlavors().each() { flavor ->
            if (flavor.name == 'blue') {
                variant.setIgnore(true)
            }
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //依赖 'group:name:version'
    //等价于 implementation group: 'androidx.appcompat', name: 'appcompat', version: '1.1.0'
    //version可以确保依赖库不会自动更新
//    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation group: 'androidx.appcompat', name: 'appcompat', version: '1.1.0'

    //仅限debug构建的依赖(不是debug的构建就不依赖)
    debugImplementation 'androidx.test.ext:junit:1.1.1'
    //仅限staging构建的依赖
    stagingImplementation 'androidx.test.ext:junit:1.1.1'
}
